@import '../../../structure/typography'; 

$font-weight : '';

@function font-weight-connection($font-weight-name){
    @if $font-weight-name == 'bold'{
        @return  700;
    }
    @if $font-weight-name == 'black'{
        @return  800;
    }
    @if $font-weight-name == 'light'{
        @return  300;
    }
    @if $font-weight-name == 'medium'{
        @return  500;
    }
    @if $font-weight-name == 'regular'{
        @return  400;
    }
    @if $font-weight-name == 'thin'{
        @return  100;
    }
}
@mixin make-font-face{
    @each $font-name, $font-details in $fonts {
      $font-folder: map-get($font-details, "folder");
      @each $font-type, $font-files in map-get($font-details, "font-types") {
        $font-weight : font-weight-connection($font-type);
         @font-face {
            $file-src : '';
            font-family: map-get($font-details, "name");
            font-weight: $font-weight;
            @each $font-file in $font-files {
              $file-name: nth($font-file, 1);
              $file-format: str-slice($file-name, str-index($file-name, ".") + 1);
              $file-path: $font-folder + "/" + $file-name;
              $file-src :$file-src + #{url("#{$fonts-path + $file-path}") format('#{$file-format}')} + ', ';
            }
            src: unquote($file-src);
          }
      }
    }
}
@mixin make-font-classes{ 
    $fonts-primary : map-get($fonts, 'primary');
    $font-type : map-get($fonts-primary, 'font-types');
    $class-name : map-get($fonts-primary, 'name');
    .#{$class-name}{
        font-family : map-get($fonts-primary, 'name');
    }
    @each $font-name, $font-file in $font-type{
        $font-weight : font-weight-connection($font-name);
        .#{$font-prefix}-#{$font-name}{
            font-weight: $font-weight;
        }
    }
}
@function generate-font-size-classes(){
    $list : ();
    $base : ();

        @each $key,$value in $break-points{
            @each $name, $size in $font-size{
                $base:generate-classes-responsive-on-value($font-prefix , $key , $name);
                $map:(
                    className: $base,
                    propertyKeys:'font-size',
                    propertyValues:$size
                );
                $list:append($list , $map);
            }
        }
    @return $list;
}
$font-size : generate-font-size-classes();
@include make-font-face;
@include make-font-classes;