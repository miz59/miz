
// config

$break-points:( sm: 100, lg: 200 ,xl:300);

$prefix:gap;
// count:25,
// prefix:gap,
// factor:1,
// unit:px




@function generate-responsive-classes($prefix , $count){
    $list:();
    
@each $key , $value in $break-points{

        $base:unquote("." + $prefix + "-" + $key);
        
        @for $j from 1 through $count{
            $total:$base + "-" + $j;
            $list:append($list , $total , comma);
        }
    }
    @return $list;
}


@function list-generator($property , $count){

    $name-list:generate-responsive-classes("col",$count);
    $list:();
    
    @for $i from 1 through length($name-list){
    


    $map:(
        name: nth($name-list,$i),
        propertyKey:($property),
        propertyValue:unquote((100*$i)+"px")
    );
    $list:append($list ,$map);
                
            }

            @return $list;
    
}


@function list-generator2($perfix,$property,$map){


    $count : map.get($map,'count');
    $factor : map.get($map,'factor');
    $unit : map.get($map,'unit');
    
    
    $name-list:generate-responsive-classes($prefix,$count);
    $list:();



    
    @for $i from 1 through length($name-list){
    
        

    $map:(
        name: nth($name-list,$i),
        propertyKey:($property),
        propertyValue:unquote((100*$i)+"px")
    );
    $list:append($list ,$map);
                
            }

            @return $list;
    
}












//$list:list-generator(width,15);



$gaps:list-generator2('g',gap,$structure-gaps);
$cols:list-generator2('col',width,$structure-cols);


$totalist : $gaps,$cols;

@each $key , $value in $break-points{

    @media screen and (max-width : $value) {

        @for $x from 1 through length($totalist){

            @for $i from 1 through length(nth($totalist,$x)){


                $name:map.get(nth(nth($totalist,$x),$i),name);
                $property-key:map.get(nth(nth($totalist,$x),$i),propertyKey);
                $property-value:map.get(nth(nth($totalist,$x),$i),propertyValue);
    
    
            
                        @if(string.index($name,("-"+$key))!=null){
    
                             #{$name } {
                                #{$property-key }: $property-value;
                                     
                                  
                                }
                            }
                        
                    }

        }
        


    }
   
}


// @debug $list;

// @each $key , $value in $break-points{

//     @media screen and (max-width : $value) {
        
//         @for $i from 1 through length($list){


//             $name:map.get(nth($list,$i),name);
//             $property-key:map.get(nth($list,$i),propertyKey);
//             $property-value:map.get(nth($list,$i),propertyValue);


        
//                     @if(string.index($name,("-"+$key))!=null){

//                          #{$name } {
//                             #{$property-key }: $property-value;
                                 
                              
//                             }
//                         }
                    
//                 }

//     }
   
// }

// $string: 'sallam donya <img src="a.png "/>chetori <p>khobid</p>sallamatid<span>khodahafez</span>';

// $output:"";

// $start:1;

// $num:0;


// @for $i from 1 through str_length($string){

// $element:string.slice($string, ($i), ($i));

//    @if($element =="/"){

//     $num:$num + 1;
//    }

   
// }


//     @for $i from 1 through $num{
            
//         $index1:string.index($string,"<");
//         $index2:string.index($string,">");

//         @if(string.index($string,"/")==($index2 - 1)){

//             $item:string.slice($string, $start, ($index1 - 1));

//             @if($item!=""){

//                 $output:$output+"\a"+$item;

//             }
        
        
        
//             $item:string.slice($string, ($index1), ($index2));
        
//             $output:$output+"\a"+$item;

           
        
//             $string:string.slice($string, ($index2 + 1), str_length($string));
    
//         }

//         @else {

          
//             $item:string.slice($string, $start, ($index1 - 1));


//             @if($item!=""){

//                 $output:$output+"\a"+$item;

//             }
    
//             $index3:string.index($string,"/");

//             $item2:string.slice($string, $index3, str_length($string));

//             $index4:string.index($item2,">");
        
//             $item:string.slice($string,$index1, ($index4 + $index3 - 1));
    
//             $output:$output+"\a"+$item;


//             $start2: ($index4 + $index3);
        
//             $string:string.slice($string, $start2, str_length($string));


//             @if(string.index($string,"<")== null){

//                 $item:string.slice($string, $start, str_length($string));
//                 $output:$output+"\a"+$item;
//             }



//         }

// }





// @debug $output;








// $output:"";

// @if(length($split)>0){

//     @for $i from 1 through length($split){

    

//         $item:nth($split,$i);
//         $split2:string.split($item,"/>");
    
//         @debug $split2;

//         @for $j from 1 through length($split2){
    
//             @if(length($split2)>0){
            
//                 $item2:nth($split2,$j);
    
//             @if($j==length($split2)){
    
//                 @if($i==length($split)){

//                     $output:$output+"\a"+" -"+$item2;
//                 }
//                 @else{
//                     $output:$output+"\a"+$item2;
//                 }
                
    
//             }@else{
    
              
//                 $output:$output+"\a"+" -"+$item2;
    
//             }
//             }
            
    
//         }
    
    
    
    
    
    
//     }
// }



// @debug $output;
